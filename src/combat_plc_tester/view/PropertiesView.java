/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

// Package
package combat_plc_tester.view;

// Imports
import combat_plc_tester.controller.TestController;
import javax.swing.JOptionPane;

/**
 * Class: PropertiesView
 * 
 * Purpose: 
 * This class represents the View component in the Model-View-Controller (MVC) pattern
 * for managing and displaying various application properties. It provides a graphical 
 * interface for users to view, modify, and reset configuration parameters related to the 
 * application's operational settings. 
 * 
 * @author Seniow Andy
 * @version 1.0
 * @since 13/01/2025
 */
public class PropertiesView extends javax.swing.JPanel {

    private TestController testcontroller;            // The test controller.
    
    /**
    * Initializes the `PropertiesView` by setting up its graphical components. 
    */
    public PropertiesView() {
        initComponents();
    }

    public void setTestController(TestController testcontroller){
        this.testcontroller = testcontroller;
    }
   
    /**
    * Displays an exception error message to the user in a dialog box.
    * 
    * @param exception The exception message to be displayed in the dialog box. 
    */ 
    public void exceptionErrorView(String exception){ 
         JOptionPane.showMessageDialog(null, exception, "Exception", JOptionPane.ERROR_MESSAGE);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPlcIPaddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPlcRack = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPlcSlot = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDBInputs = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDBOutputs = new javax.swing.JTextField();
        btnChangePropterties = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtCycleTime = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCycleTimeScaleFactor = new javax.swing.JTextField();
        btnResetToDefault = new javax.swing.JButton();

        setBackground(new java.awt.Color(50, 70, 110));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Properties", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        setForeground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(925, 550));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("IP address:");

        txtPlcIPaddress.setText("192.168.0.1");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Rack:");

        txtPlcRack.setText("0");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Slot:");

        txtPlcSlot.setText("1");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Data Block Number Inputs:");

        txtDBInputs.setText("1");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Data Block Number Outputs:");

        txtDBOutputs.setText("2");

        btnChangePropterties.setBackground(new java.awt.Color(27, 38, 61));
        btnChangePropterties.setForeground(new java.awt.Color(255, 255, 255));
        btnChangePropterties.setText("Change Properties");
        btnChangePropterties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeProptertiesActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Plc Cycle Time (milliseconds):");

        txtCycleTime.setText("100");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Plc Cycle Time Scaling Factor:");

        txtCycleTimeScaleFactor.setText("1");

        btnResetToDefault.setBackground(new java.awt.Color(27, 38, 61));
        btnResetToDefault.setForeground(new java.awt.Color(255, 255, 255));
        btnResetToDefault.setText("Reset to Defaults");
        btnResetToDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetToDefaultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPlcSlot, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(txtPlcIPaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtPlcRack)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDBOutputs, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(txtCycleTime, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtDBInputs, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtCycleTimeScaleFactor, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(160, 160, 160))
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(btnResetToDefault, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(btnChangePropterties, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCycleTime, txtDBInputs, txtDBOutputs, txtPlcIPaddress, txtPlcRack, txtPlcSlot});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCycleTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCycleTimeScaleFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDBInputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlcIPaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlcRack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlcSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDBOutputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnResetToDefault, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChangePropterties, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
    * Handles the action event triggered by the "Change Properties" button.
    * 
    * Workflow:
    * - Retrieves the text input from the PLC configuration fields: IP address, rack, slot, 
    *   cycle time, and cycle time scale factor.
    * - Retrieves the text input for the data block numbers for inputs and outputs.
    * 
    * @param evt the `ActionEvent` triggered by clicking the "Change Properties" button.
    */
    private void btnChangeProptertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeProptertiesActionPerformed
        testcontroller.setPLCproperties(txtPlcIPaddress.getText(), txtPlcRack.getText(),
                txtPlcSlot.getText(), txtCycleTime.getText(), txtCycleTimeScaleFactor.getText());
        testcontroller.setDataBuildingBlocknumbers(txtDBInputs.getText(), txtDBOutputs.getText());
    }//GEN-LAST:event_btnChangeProptertiesActionPerformed

    /**
    * Updates the view with the specified PLC properties and data block numbers.
    * 
    * @param PlcIp the IP address of the PLC.
    * @param PlcRack the rack number of the PLC.
    * @param PlcSlot the slot number of the PLC.
    * @param CycleTime the cycle time for the PLC.
    * @param CycleTimeScalingFactor the scale factor for the cycle time.
    * @param DBInputs the data block number for inputs.
    * @param DBOutputs the data block number for outputs.
    */
    public void viewProperties(String PlcIp, String PlcRack, String PlcSlot, String CycleTime, 
                                   String CycleTimeScalingFactor, String DBInputs, String DBOutputs) {                                                         
        txtPlcIPaddress.setText(PlcIp);
        txtPlcRack.setText(PlcRack);
        txtPlcSlot.setText(PlcSlot);
        txtCycleTime.setText(CycleTime);
        txtCycleTimeScaleFactor.setText(CycleTimeScalingFactor);
        txtDBInputs.setText(DBInputs);
        txtDBOutputs.setText(DBOutputs);  
    }
    
    /**
    * Handles the action event triggered by the "Reset to Default" button.
    *
    * @param evt the `ActionEvent` triggered by clicking the "Reset to Default" button.
    */
    private void btnResetToDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetToDefaultActionPerformed
       resetPropertiesToDefault();
    }//GEN-LAST:event_btnResetToDefaultActionPerformed
    
    /**
    * Resets the PLC properties and data block numbers to their default values.
    * 
    * 
    * Default Values:
    * - IP Address: `192.168.0.1`
    * - Rack: `0`
    * - Slot: `1`
    * - Cycle Time: `100`
    * - Cycle Time Scale Factor: `1`
    * - Data Block for Inputs: `1`
    * - Data Block for Outputs: `2`
    */
    public void resetPropertiesToDefault(){
        txtPlcIPaddress.setText("192.168.0.1");
        txtPlcRack.setText("0");
        txtPlcSlot.setText("1");
        txtCycleTime.setText("100");
        txtCycleTimeScaleFactor.setText("1");
        txtDBInputs.setText("1");
        txtDBOutputs.setText("2");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangePropterties;
    private javax.swing.JButton btnResetToDefault;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtCycleTime;
    private javax.swing.JTextField txtCycleTimeScaleFactor;
    private javax.swing.JTextField txtDBInputs;
    private javax.swing.JTextField txtDBOutputs;
    private javax.swing.JTextField txtPlcIPaddress;
    private javax.swing.JTextField txtPlcRack;
    private javax.swing.JTextField txtPlcSlot;
    // End of variables declaration//GEN-END:variables
}
