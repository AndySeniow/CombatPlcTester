// Package
package combat_plc_tester.model.moore;

// Imports
import java.util.List;
import java.util.Set;

/**
 * Class: CycleGenerator
 *
 * Purpose: Acts as the context in the Strategy Pattern for generating test cycles.
 *
 * Design Pattern:
 * - Strategy Pattern: This class encapsulates the algorithm for generating test cycles, 
 *   allowing dynamic selection and switching of different strategies at runtime.
 *
 * @author Seniow Andy
 * @version 1.0
 * @since 13/01/2025
 */
public class CycleGenerator {

    private CycleGeneratorStrategy strategy;

    public CycleGenerator() {
      
    }

    /**
     * Sets the strategy for generating cycles.
     *
     * @param strategy CycleGeneratorStrategy - The strategy to be used for generating test cycles.
     */
    public void setStrategy(CycleGeneratorStrategy strategy) {
        this.strategy = strategy;
    }

    /**
     * Generates test cycles using the current strategy.
     *
     * Delegates the task of cycle generation to the strategy implementation.
     *
     * @param stategraphelementList List<GraphElement> - A list of state graph elements.
     * @param transitiongraphelementList List<GraphElement> - A list of transition graph elements.
     * @return Set<List<String>> - A set of test cycles generated by the strategy.
     */
    public Set<List<String>> generateCycles(List<GraphElement> stategraphelementList, List<GraphElement> transitiongraphelementList) {
        return strategy.generateCycles(stategraphelementList, transitiongraphelementList);
    }  
}
